name: Medusa B2B Deploy

on:
  push:
    branches:
      - main # Убедитесь, что это имя вашей основной ветки (например, master)

# --- Переменные окружения для ВСЕГО JOB-а ---
# Здесь мы определяем все переменные окружения, включая те, что из секретов GitHub.
# Они будут доступны для ВСЕХ ШАГОВ в этом JOB.

jobs:
  deploy:
    runs-on: ubuntu-latest # Вы можете использовать self-hosted runner, если нужно

    steps:
      - name: Checkout code
        # Выгружает код из вашего репозитория
        uses: actions/checkout@v4

      # Пропускаем шаги сборки (например, yarn install, build) на CI runner,
      # поскольку они будут выполнены вручную на сервере в первый раз.

      - name: Copy project files to server
        # Используем action для копирования файлов по SCP
        uses: appleboy/scp-action@v0.1.4 # Проверьте наличие более новой версии, если хотите
        with:
          host: ${{ secrets.SSH_HOST }} # IP-адрес сервера из секретов GitHub
          username: ${{ secrets.SSH_USER }} # Имя пользователя SSH из секретов GitHub
          key: ${{ secrets.SERVER_SSH_KEY }} # Приватный SSH-ключ из секретов GitHub
          port: ${{ secrets.SSH_PORT }} # Порт SSH из секретов GitHub (опционально, по умолчанию 22)
          source: "./" # Копируем все файлы и папки из корня репозитория
          target: "/home/admin2/ars-backend" # Целевая директория на сервере
          # Опционально: исключите определенные директории/файлы при копировании
          # exclude: ".git,.github,node_modules,dist"

      - name: Configure and Restart Medusa service
        # Используем action для выполнения команды по SSH
        uses: appleboy/ssh-action@v1.0.0 # Проверьте наличие более новой версии, если хотите
        with:
          host: ${{ secrets.SSH_HOST }} # IP-адрес сервера из секретов GitHub
          username: ${{ secrets.SSH_USER }} # Имя пользователя SSH из секретов GitHub
          key: ${{ secrets.SERVER_SSH_KEY }} # Приватный SSH-ключ из секретов GitHub
          port: ${{ secrets.SSH_PORT }} # Порт SSH из секретов GitHub (опционально, по умолчанию 22)

          script: |
            echo "Executing deployment script on server..."

            # Переходим в директорию проекта на сервере
            cd /home/admin2/ars-backend || { echo "Error: Directory /home/admin2/ars-backend not found"; exit 1; }           

            # Восстанавливаем .env
            - name: Restore .env
              run: |
                if [ -f /home/admin2/secrets/.env-backend ]; then
                  cp /home/admin2/secrets/.env-backend .env
                  echo ".env restored"
                else
                  echo "No .env-backend to copy"
                fi




            # --- ВАЖНО ---
            # Этот рабочий процесс ПРЕДПОЛАГАЕТ, что вы ВРУЧНУЮ выполнили ПЕРВОНАЧАЛЬНУЮ настройку
            # ПОСЛЕ САМОГО ПЕРВОГО успешного копирования файлов этим рабочим процессом.

            # Для последующих запусков эта команда перезапускает процесс PM2.
            # Замените 'ars-backend' на фактическое имя вашего процесса PM2.
            # Если PM2 не запущен или имя процесса неверно, эта команда может завершиться с ошибкой.
            echo "Попытка перезапустить процесс PM2 'ars-backend'..."
            pm2 restart ars-backend || { echo "Warning: PM2 process 'medusa-b2b' could not be restarted. It might not be running or the name is incorrect. Please check manually on the server."; true; }
            echo "Deployment script finished."
